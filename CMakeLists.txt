cmake_minimum_required(VERSION 3.5.0) 
project(360PanoramaViewer)

# look for modules in this dir
# message(STATUS "CMAKE_MODULE_PATH原始路径：${CMAKE_MODULE_PATH}，CMAKE_SOURCE_DIR：${CMAKE_SOURCE_DIR}")
# set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}" ${CMAKE_MODULE_PATH} )
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
message(STATUS "CMAKE_MODULE_PATH现在路径：${CMAKE_MODULE_PATH}")

FIND_PACKAGE(OpenGL REQUIRED)
IF(MSVC)
  FIND_PACKAGE(GLEWW REQUIRED)
ELSE(MSVC)
  FIND_PACKAGE(GLEWW REQUIRED)
ENDIF(MSVC)

FIND_PACKAGE(GLFW REQUIRED)

# message(STATUS "GLFW_LIBRARY:${GLFW_LIBRARY}")

IF(MSVC)
   SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Ox /Ob2 /GS- /MP /fp:fast")
   # no expensive range checking
   ADD_DEFINITIONS(-D_SECURE_SCL=0)
   ADD_DEFINITIONS(-D_ITERATOR_DEBUG_LEVEL=0)
   ADD_DEFINITIONS(-DUNICODE)
   ADD_DEFINITIONS(-D_UNICODE)
   ADD_DEFINITIONS(-DGLEW_STATIC)
      
   # suppress MSVC security warnings
   ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ELSE(MSVC)
   add_definitions(-std=c++0x -Wall -g)
ENDIF(MSVC)

if(UNIX)
  find_package(X11 REQUIRED)
  find_package(Threads REQUIRED)
endif(UNIX)


# set(OpenCV_DIR "E:/softwares/MinGW64_v8_OpenCV4_4_Contrib_install")
find_package(OpenCV REQUIRED)

# 包含 src 子目录
add_subdirectory(src)

